---
- name: "AWS EC2 instance provisioning"
  hosts: local
  connection: local
  become: true
  gather_facts: true

  vars:
    aws_region: us-east-2
    vpc_name: web_vpc
    instance_type: t2.micro
    image_id: ami-0e38b48473ea57778
    mykey: anees-ubuntu

  tasks:
  
    - name: "Creating VPC"
      ec2_vpc_net: 
        name: "{{vpc_name}}"
        region: "{{aws_region}}"
        state: present
        cidr_block: 172.16.0.0/16  
      register: myvpc


    - debug:
        var: myvpc


    - name: "Create Public-Subnet 1"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{myvpc.vpc.id}}"
        cidr: 172.16.0.0/20
        region: "{{aws_region}}"
        az: "{{aws_region}}a"
        tags:
          name: "Public_Subnet_1"
      register: public_subnet_1

    - debug:
        var: public_subnet_1

    - name: "Create Public-Subnet 2"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{myvpc.vpc.id}}"
        cidr: 172.16.16.0/20
        region: "{{aws_region}}"
        az: "{{aws_region}}b"
        tags:
          name: "Public_Subnet_2"
      register: public_subnet_2

    - debug:
        var: public_subnet_2


    - name: "Create Private-Subnet 1"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{myvpc.vpc.id}}"
        cidr: 172.16.32.0/20
        region: "{{aws_region}}"
        az: "{{aws_region}}c"
        tags:
          name: "Private_Subnet_1"
      register: private_subnet_1


    - debug:
        var: private_subnet_1

    - name: "Create an Internet Gateway"
      ec2_vpc_igw:
        vpc_id: "{{myvpc.vpc.id}}"
        state: present
        region: "{{aws_region}}"
      register: igw

    - debug:
        var: igw


    - name: "Create a NAT Gateway"
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{public_subnet_2.subnet.id}}"
        wait: yes
        region: "{{aws_region}}"
        if_exist_do_not_create: true
      register: nat_gateway

    - debug:
        var: nat_gateway

    - name: "Creating Route Table for Public Subnets"
      ec2_vpc_route_table:
        vpc_id: "{{myvpc.vpc.id}}"
        region: "{{aws_region}}" 
        tags:
          Name: "Public Route table"
        subnets:
          - "{{public_subnet_1.subnet.id}}"
          - "{{public_subnet_2.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw.gateway_id}}"


    - name: "Creating Route Table for Private Subnet"
      ec2_vpc_route_table:
        vpc_id: "{{myvpc.vpc.id}}"
        region: "{{aws_region}}" 
        tags:
          Name: "Private Route table"
        subnets:
          - "{{private_subnet_1.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{nat_gateway.nat_gateway_id}}"
    
    - name: "Creating Security Group for Bastion"
      ec2_group:
        name: "Bastion-SG"
        description: "Security Group for Bastion Server"
        vpc_id: "{{myvpc.vpc.id}}"
        region: "{{aws_region}}"
        rules:
          - proto: tcp
            ports: 22
            cidr_ip: 0.0.0.0/0
            rule_desc: "Allow all connections to port 22"
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: bastion_sg

    - debug:
        var: bastion_sg

    - name: "Creating Security Group for Webserver"
      ec2_group:
        name: "Webserver-SG"
        description: "Security Group for Webserver"
        vpc_id: "{{myvpc.vpc.id}}"
        region: "{{aws_region}}"
        rules:
          - proto: tcp
            ports: 22
            group_id: "{{bastion_sg.group_id}}"
            rule_desc: "Allow SSH access from Bastion Server"
          - proto: tcp
            ports: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: "Allow all connections to port 80"
          - proto: tcp
            ports: 443
            cidr_ip: 0.0.0.0/0
            rule_desc: "Allow all connections to port 443"
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: webserver_sg

    - debug:
        var: webserver_sg
  
    - name: "Creating Security Group for Database Server"
      ec2_group:
        name: "Database-SG"
        description: "Security Group for Database Server"
        vpc_id: "{{myvpc.vpc.id}}"
        region: "{{aws_region}}"
        rules:
          - proto: tcp
            ports: 22
            group_id: "{{bastion_sg.group_id}}"
            rule_desc: "Allow SSH access from Bastion Server"
          - proto: tcp
            ports: 3306
            group_id: "{{webserver_sg.group_id}}"
            rule_desc: "Open port 3306 for webserver"
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: database_sg

    - debug:
        var: database_sg

    - name: "Creating an EC2 for webserver"
      ec2:
        key_name: "{{mykey}}"
        instance_type: "{{instance_type}}" 
        image: "{{image_id}}"
        wait: yes
        group_id: "{{webserver_sg.group_id}}"
        vpc_subnet_id: "{{public_subnet_1.subnet.id}}"
        instance_tags:
          Name: webserver
        assign_public_ip: yes
        region: "{{aws_region}}"
      register: webserver

    - name: "Creating a Bastion Server"      
      ec2:
        key_name: "{{mykey}}"
        instance_type: "{{instance_type}}"
        image: "{{image_id}}"
        wait: yes
        group_id: "{{bastion_sg.group_id}}"
        vpc_subnet_id: "{{public_subnet_2.subnet.id}}"
        instance_tags:
          Name: bastion
        assign_public_ip: yes
        region: "{{aws_region}}"
      register: bastion

    - name: "Creating a DB Server"
      ec2:
        key_name: "{{mykey}}"
        instance_type: "{{instance_type}}"
        image: "{{image_id}}"
        wait: yes
        group_id: "{{database_sg.group_id}}"
        vpc_subnet_id: "{{private_subnet_1.subnet.id}}"
        instance_tags:
          Name: bastion
        assign_public_ip: no
        region: "{{aws_region}}"
      register: database


